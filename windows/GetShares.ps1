function Invoke-GetShares {
    <#
	.SYNOPSIS
	Check access and files in network shares 
	.PARAMETER domains
	List of comma separated domains 
	.PARAMETER OutDir
	Output directory
	.PARAMETER Search
	Search for passwords in files
	.EXAMPLE
	Invoke-GetShares -domains "domain.corp,dev.domain.corp,domain2.corp" -OutDir "C:\Temp" [-Search]
	#>
	param (
		[String] $domains, #comma separated
		[String] $OutDir = "C:\Temp",
		[Switch] $Search
	)

	New-Item -ItemType Directory -Force -Path $OutDir >$null 2>&1
	Invoke-WebRequest -Uri "https://raw.githubusercontent.com/lefayjey/PentestTools/master/windows/Microsoft.ActiveDirectory.Management.dll" -OutFile "$OutDir\Microsoft.ActiveDirectory.Management.dll"
    Import-Module "$OutDir\Microsoft.ActiveDirectory.Management.dll" -Force

    if ($domains -eq "" -or $domains -eq $null){
        $domain_list = Get-ADDomain -Current LoggedOnUser | foreach { $_.DNSRoot } | Sort-Object | Get-Unique
        $domains = $domain_list -join ','
    }

	ForEach ($domain in $domains.split(","))
	{
        $OutDomainDir = "$OutDir\GetShares_$domain"
	    New-Item -ItemType Directory -Force -Path $OutDomainDir >$null 2>&1
    
    	## -------------------Step 1: Get list of servers
		Write-Output "------Start Get-Servers------"
		
		$serverslist = "$OutDomainDir\servers_$domain.txt"
		if (Test-Path $serverslist -PathType leaf ){
			Write-Output "------Get-Servers file already exists------"
		}
		else{
			Get-ADComputer -Filter {OperatingSystem -like "*windows*"} -Properties DNSHostName |  foreach { $_.DNSHostname } | Sort-Object | Get-Unique | Out-File -filepath $serverslist 2>$null
		}

		Write-Output "------End Get-Servers------"

		## -------------------Step 2: Get list of network shares
		Write-Output "------Start Get-AllShares------"
		$servers = Get-Content $serverslist
		$shareslist = "$OutDomainDir\all_shares_$domain.txt"
		$shares = ""
		if (Test-Path $shareslist -PathType leaf ){
			Write-Output "------All-Shares file already exists------"
		}
		else{
			foreach  ($server in $servers) {
				(net view /all $server) | 
				ForEach-Object {
						if((($_.IndexOf(' Disk ') -gt 0) -or ($_.IndexOf(' Disque ') -gt 0) -or ($_.IndexOf(' Platte ') -gt 0)) -AND ($_.contains('ADMIN$') -eq $False) -and ($_.contains('print$') -eq $False) -and ($_.contains('IPC$') -eq $False) -and ($_.contains('C$') -eq $False))
						{
							$name=$_.Split('      ')[0]; 
							$share = "\\$server\$name";
							$shares += "$share`n"
						}
				}
				$shares | Out-File $shareslist 2>$null
			}
			(Get-Content $shareslist) | Where-Object {$_.trim() -ne "" } | set-content $shareslist
		}
		Write-Output "------End Get-AllShares------"
		
		## -------------------Step 3: Get list of files in each network share
		Write-Output "------Start Get-FilesInShares------"
		$shares = Get-Content $shareslist 
		$sharesdump = "$OutDomainDir\search_shares_$domain\"
		New-Item -ItemType Directory -Force -Path $sharesdump >$null 2>&1

		foreach ($share in $shares)
		{ 
			$out = ($share).replace("\","_")
			Get-ChildItem -Path $share -Recurse -ErrorAction SilentlyContinue -Force | Out-File -filepath $sharesdump\$($out).txt 2>$null
		}
		Write-Output "------End Get-FilesInShares------"
		
		## -------------------EXTRA: Search for terms in files 
		if($Search -eq $true){
			Write-Output "------Start FindInShares------"
			$shares = Get-Content $shareslist 
			$findlist = "$OutDomainDir\find_results_$domain\"
			New-Item -ItemType Directory -Force -Path $findlist >$null 2>&1

			foreach ($share in $shares)
			{ 
				$out = ($share).replace("\","_")
				Get-ChildItem -Path $share -Include @("*.cspkg","*.publishsettings","*.xml","*.json","*.ini","*.bat","*.log","*.pl","*.py","*.ps1","*.txt","*.config","*.conf", "*.cnf", "*.sql", "*.yml", "*.cmd", "*.vbs", "*.php", "*.cs", "*.inf") -Recurse | Select-String -Pattern "passw" | Out-File -filepath $findlist\$($out)_files_containing_passw.txt        
			}
			Write-Output "------End FindInShares------"
		}
	}
}